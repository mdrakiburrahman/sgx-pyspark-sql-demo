name: $CAS_NAMESPACE/$PYSPARK_SESSION_NAME
version: "0.3"

security:
  attestation:
    # Use Microsoft Azure Attestation as the attestation provider.
    # Since MAA also supports attestation policies, the attestation flow has to be
    # allowed by BOTH policies (i.e., MAA and SCONE). If you use one of the shared
    # MAA instances provided by Azure, they apply an "empty" policy, so you only have
    # to comply with this one (SCONE).
    mode: maa
    url: $MAA_PROVIDER
    # We explicitly tolerate:
    # 1) Enclaves in debug mode; and
    # 2) Having the TCB state enforced by MAA, not by us, since MAA does not include
    #    any TCB state in its token. This is required for `mode: maa`.
    tolerate: [debug-mode, maa-managed-tcb]

# Secrets can be injected into the enclave (as environment variables
# or files) once remote attestation is successful. CAS can also generate
# secrets automatically, where no human will see the secret content (which
# only exists inside of enclaves). Secrets can also be imported from other
# Scone sessions or Azure Key Vault instances.
secrets:
  - name: AZURE_BLOB_ACCOUNT_NAME
    kind: ascii
    value: "azureopendatastorage"
  - name: AZURE_BLOB_CONTAINER_NAME
    kind: ascii
    value: "nyctlc"
  - name: AZURE_BLOB_RELATIVE_PATH
    kind: ascii
    value: "yellow"
  - name: AZURE_BLOB_SAS_TOKEN
    kind: ascii
    value: ""

services:
  - name: nyc-taxi-yellow-driver
    # Field `command` will override whatever was executed in the remote untrusted host.
    command: python3 /fspf/encrypted-files/nyc-taxi-yellow.py
    # Fied `mrenclaves` is the list of trustworthy enclave measurements. To retrieve the
    # enclave measurement of your Scone application, run it with env. var. SCONE_HASH=1 set.
    mrenclaves: ["f5bc48df5283bba455d0bb41b506e46dfb0d9ae68fa15145669d473eac005a89"]
    environment:
      # We use the notation $$SCONE::<secret_name>$$ to inject the value of a secret
      # (defined in `secrets` section) into the environment of the enclave.
      # These environment variables will be injected only after attestation is successful.
      AZURE_BLOB_ACCOUNT_NAME: $$SCONE::AZURE_BLOB_ACCOUNT_NAME$$
      AZURE_BLOB_CONTAINER_NAME: $$SCONE::AZURE_BLOB_CONTAINER_NAME$$
      AZURE_BLOB_RELATIVE_PATH: $$SCONE::AZURE_BLOB_RELATIVE_PATH$$
      AZURE_BLOB_SAS_TOKEN: $$SCONE::AZURE_BLOB_SAS_TOKEN$$
      PYTHONPATH: "/spark/python/lib/pyspark.zip:/spark/python/lib/py4j-0.10.9-src.zip:/spark//jars/spark-core_2.12-3.1.1.jar"
      PYTHONUNBUFFERED: "YES"
      SPARK_HOME: "/spark"
      SPARK_CONF_DIR: "/spark/conf"
      LD_LIBRARY_PATH: "/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64/server:/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64:/usr/lib/jvm/java-1.8-openjdk/jre/../lib/amd64::/usr/lib/jvm/java-1.8-openjdk/jre/lib/:/usr/lib/"
      JAVA_HOME: "/usr/lib/jvm/java-1.8-openjdk/"
      PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-1.8-openjdk/bin/"
      # The two variables below can be overriden by the host - allowing JVM to talk to the attested worker.
      \@\@PYSPARK_GATEWAY_SECRET: ""
      \@\@PYSPARK_GATEWAY_PORT: ""
    pwd: /
    fspf_path: /fspf/encrypted-files/volume.fspf
    fspf_key: $SCONE_FSPF_KEY
    fspf_tag: $SCONE_FSPF_TAG
  - name: nyc-taxi-yellow-exec
    # Field `command` will override whatever was executed in the remote untrusted host.
    command: /usr/lib/jvm/java-8-openjdk/bin/java -Dspark.driver.blockManager.port=7079 -Dspark.driver.port=7078 -Xms1024m -Xmx1024m -cp "/opt/spark/conf::/spark/jars/*:" org.apache.spark.executor.CoarseGrainedExecutorBackend --driver-url @@9 --executor-id @@11 --cores @@13 --app-id @@15 --hostname @@17 --resourceProfileId @@19
    # Fied `mrenclaves` is the list of trustworthy enclave measurements. To retrieve the
    # enclave measurement of your Scone application, run it with env. var. SCONE_HASH=1 set.
    mrenclaves: ["e5c6ddfac4b9fee10e0557ea33a153be3aec97ee81467cb703096a51bdcfe461"]
    environment:
      SPARK_HOME: "/spark"
      SPARK_CONF_DIR: "/spark/conf"
      LD_LIBRARY_PATH: "/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64/server:/usr/lib/jvm/java-1.8-openjdk/jre/lib/amd64:/usr/lib/jvm/java-1.8-openjdk/jre/../lib/amd64::/usr/lib/jvm/java-1.8-openjdk/jre/lib/:/usr/lib/"
      JAVA_HOME: "/usr/lib/jvm/java-1.8-openjdk/"
      PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-1.8-openjdk/bin/"
    pwd: /
